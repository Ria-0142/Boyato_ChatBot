
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESS_THANGREATER_THANGREATER_EQUALLESS_EQUALEQUALSleftANDleftORleftPLUSMINUSleftTIMESDIVIDEMODrightEXPOrightUMINUSAND ASSIGN CALL COLON COMMA DECREMENT DIVIDE DIVIDE_ASSIGN DO ELIF ELSE END EQUALS EXPO FALSE FLOAT FOR FUNC GREATER_EQUAL GREATER_THAN ID IF INCREMENT INTEGER LESS_EQUAL LESS_THAN LPAREN MINUS MINUS_ASSIGN MOD MOD_ASSIGN NOT OR PLUS PLUS_ASSIGN PRINT QUEST RETURN RPAREN STRING TIMES TIMES_ASSIGN TO TRUE WHILE\n    program_eval : program\n    program : statementsstatements : statements statement\n                  | statementstatement : ID ASSIGN STRINGstatement : ID ASSIGN expressionstatement : ID ASSIGN CALL ID LPAREN args RPARENstatement : RETURN LPAREN expression RPAREN\n                 | ID ASSIGN RETURN LPAREN expression RPARENstatement : FUNC ID LPAREN params RPAREN COLON statements maybe_endparams : params_list\n              | emptyparams_list : ID\n                   | params_list COMMA IDstatement : CALL ID LPAREN args RPARENargs : args_list\n            | emptyargs_list : expression\n                 | args_list COMMA expressionstatement : PRINT LPAREN STRING RPAREN\n                 | PRINT LPAREN expression RPAREN\n                 | PRINT LPAREN STRING expression RPARENstatement : ID PLUS_ASSIGN expression\n                 | ID MINUS_ASSIGN expression\n                 | ID TIMES_ASSIGN expression\n                 | ID DIVIDE_ASSIGN expression\n                 | ID MOD_ASSIGN expressionstatement : expression\n    expression : MINUS expression %prec UMINUS \n    expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EXPO expression\n                  | expression MOD expressionexpression : expression LESS_THAN expression\n                  | expression GREATER_THAN expression\n                  | expression GREATER_EQUAL expression\n                  | expression LESS_EQUAL expression\n                  | expression EQUALS expressionexpression : expression AND expressionexpression : expression OR expressionexpression : NOT expressionexpression : TRUE\n                  | FALSEexpression : LPAREN expression RPARENexpression : INTEGER\n                  | FLOATexpression : IDexpression : ID INCREMENT\n                   | INCREMENT IDexpression : ID DECREMENTstatement : IF expression COLON statements maybe_endstatement : IF expression COLON statements ELSE COLON statements maybe_endstatement : IF expression COLON statements elif_list ELSE COLON statements maybe_endelif_list : ELIF expression COLON statements elif_list\n                 | emptystatement : FOR ID ASSIGN expression TO expression statements maybe_endstatement : DO statements WHILE expression maybe_endstatement : WHILE expression statements maybe_endexpression : expression QUEST expression COLON expressionmaybe_end :\n                | ENDempty :'
    
_lr_action_items = {'ID':([0,3,4,5,6,7,8,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,51,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,85,86,88,89,90,91,92,94,95,100,105,107,108,110,111,112,113,114,116,117,118,120,121,122,125,127,128,130,132,134,137,138,139,140,141,142,143,144,145,146,147,148,149,],[5,5,-4,-49,-28,46,48,50,48,53,5,48,48,48,-44,-45,-47,-48,58,-3,48,48,48,48,48,48,-50,-52,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-49,48,48,5,5,-29,-43,-51,-5,-6,93,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,48,-46,101,48,5,48,48,5,48,48,48,-8,-20,-21,5,5,-60,-63,-29,48,-61,-15,48,133,-22,-53,48,48,-59,-9,5,5,5,-7,5,5,5,5,5,-10,-54,5,5,-58,-55,]),'RETURN':([0,3,4,5,6,14,18,19,20,21,23,24,30,31,48,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,88,91,100,105,107,108,110,111,112,113,116,117,121,122,128,130,132,134,137,138,139,140,141,142,143,144,145,146,147,148,149,],[9,9,-4,-49,-28,9,-44,-45,-47,-48,-3,62,-50,-52,-49,9,9,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-46,9,9,-8,-20,-21,9,9,-60,-63,-29,-61,-15,-22,-53,-59,-9,9,9,9,-7,9,9,9,9,9,-10,-54,9,9,-58,-55,]),'FUNC':([0,3,4,5,6,14,18,19,20,21,23,30,31,48,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,88,91,100,105,107,108,110,111,112,113,116,117,121,122,128,130,132,134,137,138,139,140,141,142,143,144,145,146,147,148,149,],[10,10,-4,-49,-28,10,-44,-45,-47,-48,-3,-50,-52,-49,10,10,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-46,10,10,-8,-20,-21,10,10,-60,-63,-29,-61,-15,-22,-53,-59,-9,10,10,10,-7,10,10,10,10,10,-10,-54,10,10,-58,-55,]),'CALL':([0,3,4,5,6,14,18,19,20,21,23,24,30,31,48,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,88,91,100,105,107,108,110,111,112,113,116,117,121,122,128,130,132,134,137,138,139,140,141,142,143,144,145,146,147,148,149,],[7,7,-4,-49,-28,7,-44,-45,-47,-48,-3,61,-50,-52,-49,7,7,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-46,7,7,-8,-20,-21,7,7,-60,-63,-29,-61,-15,-22,-53,-59,-9,7,7,7,-7,7,7,7,7,7,-10,-54,7,7,-58,-55,]),'PRINT':([0,3,4,5,6,14,18,19,20,21,23,30,31,48,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,88,91,100,105,107,108,110,111,112,113,116,117,121,122,128,130,132,134,137,138,139,140,141,142,143,144,145,146,147,148,149,],[11,11,-4,-49,-28,11,-44,-45,-47,-48,-3,-50,-52,-49,11,11,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-46,11,11,-8,-20,-21,11,11,-60,-63,-29,-61,-15,-22,-53,-59,-9,11,11,11,-7,11,11,11,11,11,-10,-54,11,11,-58,-55,]),'IF':([0,3,4,5,6,14,18,19,20,21,23,30,31,48,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,88,91,100,105,107,108,110,111,112,113,116,117,121,122,128,130,132,134,137,138,139,140,141,142,143,144,145,146,147,148,149,],[12,12,-4,-49,-28,12,-44,-45,-47,-48,-3,-50,-52,-49,12,12,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-46,12,12,-8,-20,-21,12,12,-60,-63,-29,-61,-15,-22,-53,-59,-9,12,12,12,-7,12,12,12,12,12,-10,-54,12,12,-58,-55,]),'FOR':([0,3,4,5,6,14,18,19,20,21,23,30,31,48,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,88,91,100,105,107,108,110,111,112,113,116,117,121,122,128,130,132,134,137,138,139,140,141,142,143,144,145,146,147,148,149,],[13,13,-4,-49,-28,13,-44,-45,-47,-48,-3,-50,-52,-49,13,13,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-46,13,13,-8,-20,-21,13,13,-60,-63,-29,-61,-15,-22,-53,-59,-9,13,13,13,-7,13,13,13,13,13,-10,-54,13,13,-58,-55,]),'DO':([0,3,4,5,6,14,18,19,20,21,23,30,31,48,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,88,91,100,105,107,108,110,111,112,113,116,117,121,122,128,130,132,134,137,138,139,140,141,142,143,144,145,146,147,148,149,],[14,14,-4,-49,-28,14,-44,-45,-47,-48,-3,-50,-52,-49,14,14,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-46,14,14,-8,-20,-21,14,14,-60,-63,-29,-61,-15,-22,-53,-59,-9,14,14,14,-7,14,14,14,14,14,-10,-54,14,14,-58,-55,]),'WHILE':([0,3,4,5,6,14,18,19,20,21,23,30,31,48,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,88,91,100,105,107,108,110,111,112,113,116,117,121,122,128,130,132,134,137,138,139,140,141,142,143,144,145,146,147,148,149,],[15,15,-4,-49,-28,15,-44,-45,-47,-48,-3,-50,-52,-49,90,15,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-46,15,15,-8,-20,-21,15,15,-60,-63,-29,-61,-15,-22,-53,-59,-9,15,15,15,-7,15,15,15,15,15,-10,-54,15,15,-58,-55,]),'MINUS':([0,3,4,5,6,8,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,51,52,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,94,95,99,100,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,122,125,127,128,130,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,],[16,16,-4,-49,33,16,16,16,16,16,16,-44,-45,-47,-48,-3,16,16,16,16,16,16,-50,-52,16,16,16,16,16,16,16,16,16,16,16,16,16,16,33,-49,16,16,33,16,92,-29,33,-51,-5,33,33,33,33,33,33,-30,-31,-32,-33,-34,-35,33,33,33,33,33,33,33,33,16,-46,33,16,33,16,16,16,16,16,16,16,33,-8,-20,33,-21,16,33,92,-60,-63,-29,16,33,33,-15,16,-22,-53,16,16,-59,-9,33,16,16,33,92,-7,16,16,16,16,16,-10,-54,16,16,-58,-55,]),'NOT':([0,3,4,5,6,8,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,51,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,86,88,89,90,91,92,94,95,100,105,107,108,110,111,112,113,114,116,117,118,121,122,125,127,128,130,132,134,137,138,139,140,141,142,143,144,145,146,147,148,149,],[17,17,-4,-49,-28,17,17,17,17,17,17,-44,-45,-47,-48,-3,17,17,17,17,17,17,-50,-52,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-49,17,17,17,17,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,17,-46,17,17,17,17,17,17,17,17,-8,-20,-21,17,17,-60,-63,-29,17,-61,-15,17,-22,-53,17,17,-59,-9,17,17,17,-7,17,17,17,17,17,-10,-54,17,17,-58,-55,]),'TRUE':([0,3,4,5,6,8,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,51,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,86,88,89,90,91,92,94,95,100,105,107,108,110,111,112,113,114,116,117,118,121,122,125,127,128,130,132,134,137,138,139,140,141,142,143,144,145,146,147,148,149,],[18,18,-4,-49,-28,18,18,18,18,18,18,-44,-45,-47,-48,-3,18,18,18,18,18,18,-50,-52,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-49,18,18,18,18,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,18,-46,18,18,18,18,18,18,18,18,-8,-20,-21,18,18,-60,-63,-29,18,-61,-15,18,-22,-53,18,18,-59,-9,18,18,18,-7,18,18,18,18,18,-10,-54,18,18,-58,-55,]),'FALSE':([0,3,4,5,6,8,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,51,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,86,88,89,90,91,92,94,95,100,105,107,108,110,111,112,113,114,116,117,118,121,122,125,127,128,130,132,134,137,138,139,140,141,142,143,144,145,146,147,148,149,],[19,19,-4,-49,-28,19,19,19,19,19,19,-44,-45,-47,-48,-3,19,19,19,19,19,19,-50,-52,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-49,19,19,19,19,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,19,-46,19,19,19,19,19,19,19,19,-8,-20,-21,19,19,-60,-63,-29,19,-61,-15,19,-22,-53,19,19,-59,-9,19,19,19,-7,19,19,19,19,19,-10,-54,19,19,-58,-55,]),'LPAREN':([0,3,4,5,6,8,9,11,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,86,88,89,90,91,92,93,94,95,100,105,107,108,110,111,112,113,114,116,117,118,121,122,125,127,128,130,132,134,137,138,139,140,141,142,143,144,145,146,147,148,149,],[8,8,-4,-49,-28,8,49,51,8,8,8,8,8,-44,-45,-47,-48,-3,8,8,8,8,8,8,-50,-52,8,8,8,8,8,8,8,8,8,8,8,8,8,8,82,-49,8,85,8,8,8,-29,-43,-51,-5,-6,94,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,8,-46,8,8,8,8,8,8,114,8,8,-8,-20,-21,8,8,-60,-63,-29,8,-61,-15,8,-22,-53,8,8,-59,-9,8,8,8,-7,8,8,8,8,8,-10,-54,8,8,-58,-55,]),'INTEGER':([0,3,4,5,6,8,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,51,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,86,88,89,90,91,92,94,95,100,105,107,108,110,111,112,113,114,116,117,118,121,122,125,127,128,130,132,134,137,138,139,140,141,142,143,144,145,146,147,148,149,],[20,20,-4,-49,-28,20,20,20,20,20,20,-44,-45,-47,-48,-3,20,20,20,20,20,20,-50,-52,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-49,20,20,20,20,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,20,-46,20,20,20,20,20,20,20,20,-8,-20,-21,20,20,-60,-63,-29,20,-61,-15,20,-22,-53,20,20,-59,-9,20,20,20,-7,20,20,20,20,20,-10,-54,20,20,-58,-55,]),'FLOAT':([0,3,4,5,6,8,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,51,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,86,88,89,90,91,92,94,95,100,105,107,108,110,111,112,113,114,116,117,118,121,122,125,127,128,130,132,134,137,138,139,140,141,142,143,144,145,146,147,148,149,],[21,21,-4,-49,-28,21,21,21,21,21,21,-44,-45,-47,-48,-3,21,21,21,21,21,21,-50,-52,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-49,21,21,21,21,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,21,-46,21,21,21,21,21,21,21,21,-8,-20,-21,21,21,-60,-63,-29,21,-61,-15,21,-22,-53,21,21,-59,-9,21,21,21,-7,21,21,21,21,21,-10,-54,21,21,-58,-55,]),'INCREMENT':([0,3,4,5,6,8,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,51,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,86,88,89,90,91,92,94,95,100,105,107,108,110,111,112,113,114,116,117,118,121,122,125,127,128,130,132,134,137,138,139,140,141,142,143,144,145,146,147,148,149,],[22,22,-4,30,-28,22,22,22,22,22,22,-44,-45,-47,-48,-3,22,22,22,22,22,22,-50,-52,22,22,22,22,22,22,22,22,22,22,22,22,22,22,30,22,22,22,22,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,22,-46,22,22,22,22,22,22,22,22,-8,-20,-21,22,22,-60,-63,-29,22,-61,-15,22,-22,-53,22,22,-59,-9,22,22,22,-7,22,22,22,22,22,-10,-54,22,22,-58,-55,]),'$end':([1,2,3,4,5,6,18,19,20,21,23,30,31,48,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,91,100,105,107,108,110,111,112,113,116,117,121,122,128,130,138,139,140,143,144,145,146,148,149,],[0,-1,-2,-4,-49,-28,-44,-45,-47,-48,-3,-50,-52,-49,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-46,-62,-8,-20,-21,-62,-62,-60,-63,-29,-61,-15,-22,-53,-59,-9,-7,-62,-62,-62,-10,-54,-62,-58,-55,]),'END':([4,5,6,18,19,20,21,23,30,31,48,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,91,100,105,107,108,110,111,112,113,116,117,121,122,128,130,138,139,140,143,144,145,146,148,149,],[-4,-49,-28,-44,-45,-47,-48,-3,-50,-52,-49,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-46,112,-8,-20,-21,112,112,-60,-63,-29,-61,-15,-22,-53,-59,-9,-7,112,112,112,-10,-54,112,-58,-55,]),'ELSE':([4,5,6,18,19,20,21,23,30,31,48,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,91,100,105,107,108,110,111,112,113,116,117,121,122,124,126,128,130,138,139,140,143,144,145,146,147,148,149,150,],[-4,-49,-28,-44,-45,-47,-48,-3,-50,-52,-49,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-46,-62,-8,-20,-21,123,-62,-60,-63,-29,-61,-15,-22,-53,135,-57,-59,-9,-7,-62,-62,-62,-10,-54,-62,-64,-58,-55,-56,]),'ELIF':([4,5,6,18,19,20,21,23,30,31,48,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,91,100,105,107,108,110,111,112,113,116,117,121,122,128,130,138,139,140,143,144,145,146,147,148,149,],[-4,-49,-28,-44,-45,-47,-48,-3,-50,-52,-49,-29,-43,-51,-5,-6,-23,-24,-25,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-46,-62,-8,-20,-21,125,-62,-60,-63,-29,-61,-15,-22,-53,-59,-9,-7,-62,-62,-62,-10,-54,-62,125,-58,-55,]),'ASSIGN':([5,53,],[24,89,]),'PLUS_ASSIGN':([5,],[25,]),'MINUS_ASSIGN':([5,],[26,]),'TIMES_ASSIGN':([5,],[27,]),'DIVIDE_ASSIGN':([5,],[28,]),'MOD_ASSIGN':([5,],[29,]),'PLUS':([5,6,18,19,20,21,30,31,47,48,52,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,99,106,109,110,113,115,116,131,136,137,],[-49,32,-44,-45,-47,-48,-50,-52,32,-49,32,32,-29,32,-51,32,32,32,32,32,32,-30,-31,-32,-33,-34,-35,32,32,32,32,32,32,32,32,-46,32,32,32,32,32,32,-29,32,32,32,32,32,]),'TIMES':([5,6,18,19,20,21,30,31,47,48,52,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,99,106,109,110,113,115,116,131,136,137,],[-49,34,-44,-45,-47,-48,-50,-52,34,-49,34,34,-29,34,-51,34,34,34,34,34,34,34,34,-32,-33,-34,-35,34,34,34,34,34,34,34,34,-46,34,34,34,34,34,34,-29,34,34,34,34,34,]),'DIVIDE':([5,6,18,19,20,21,30,31,47,48,52,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,99,106,109,110,113,115,116,131,136,137,],[-49,35,-44,-45,-47,-48,-50,-52,35,-49,35,35,-29,35,-51,35,35,35,35,35,35,35,35,-32,-33,-34,-35,35,35,35,35,35,35,35,35,-46,35,35,35,35,35,35,-29,35,35,35,35,35,]),'EXPO':([5,6,18,19,20,21,30,31,47,48,52,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,99,106,109,110,113,115,116,131,136,137,],[-49,36,-44,-45,-47,-48,-50,-52,36,-49,36,36,-29,36,-51,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-46,36,36,36,36,36,36,-29,36,36,36,36,36,]),'MOD':([5,6,18,19,20,21,30,31,47,48,52,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,99,106,109,110,113,115,116,131,136,137,],[-49,37,-44,-45,-47,-48,-50,-52,37,-49,37,37,-29,37,-51,37,37,37,37,37,37,37,37,-32,-33,-34,-35,37,37,37,37,37,37,37,37,-46,37,37,37,37,37,37,-29,37,37,37,37,37,]),'LESS_THAN':([5,6,18,19,20,21,30,31,47,48,52,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,99,106,109,110,113,115,116,131,136,137,],[-49,38,-44,-45,-47,-48,-50,-52,38,-49,38,38,-29,38,-51,38,38,38,38,38,38,-30,-31,-32,-33,-34,-35,None,None,None,None,None,-41,-42,38,-46,38,38,38,38,38,38,-29,38,38,38,38,38,]),'GREATER_THAN':([5,6,18,19,20,21,30,31,47,48,52,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,99,106,109,110,113,115,116,131,136,137,],[-49,39,-44,-45,-47,-48,-50,-52,39,-49,39,39,-29,39,-51,39,39,39,39,39,39,-30,-31,-32,-33,-34,-35,None,None,None,None,None,-41,-42,39,-46,39,39,39,39,39,39,-29,39,39,39,39,39,]),'GREATER_EQUAL':([5,6,18,19,20,21,30,31,47,48,52,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,99,106,109,110,113,115,116,131,136,137,],[-49,40,-44,-45,-47,-48,-50,-52,40,-49,40,40,-29,40,-51,40,40,40,40,40,40,-30,-31,-32,-33,-34,-35,None,None,None,None,None,-41,-42,40,-46,40,40,40,40,40,40,-29,40,40,40,40,40,]),'LESS_EQUAL':([5,6,18,19,20,21,30,31,47,48,52,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,99,106,109,110,113,115,116,131,136,137,],[-49,41,-44,-45,-47,-48,-50,-52,41,-49,41,41,-29,41,-51,41,41,41,41,41,41,-30,-31,-32,-33,-34,-35,None,None,None,None,None,-41,-42,41,-46,41,41,41,41,41,41,-29,41,41,41,41,41,]),'EQUALS':([5,6,18,19,20,21,30,31,47,48,52,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,99,106,109,110,113,115,116,131,136,137,],[-49,42,-44,-45,-47,-48,-50,-52,42,-49,42,42,-29,42,-51,42,42,42,42,42,42,-30,-31,-32,-33,-34,-35,None,None,None,None,None,-41,-42,42,-46,42,42,42,42,42,42,-29,42,42,42,42,42,]),'AND':([5,6,18,19,20,21,30,31,47,48,52,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,99,106,109,110,113,115,116,131,136,137,],[-49,43,-44,-45,-47,-48,-50,-52,43,-49,43,43,-29,43,-51,43,43,43,43,43,43,-30,-31,-32,-33,-34,-35,43,43,43,43,43,-41,-42,43,-46,43,43,43,43,43,43,-29,43,43,43,43,43,]),'OR':([5,6,18,19,20,21,30,31,47,48,52,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,99,106,109,110,113,115,116,131,136,137,],[-49,44,-44,-45,-47,-48,-50,-52,44,-49,44,44,-29,44,-51,44,44,44,44,44,44,-30,-31,-32,-33,-34,-35,44,44,44,44,44,44,-42,44,-46,44,44,44,44,44,44,-29,44,44,44,44,44,]),'QUEST':([5,6,18,19,20,21,30,31,47,48,52,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,99,106,109,110,113,115,116,131,136,137,],[-49,45,-44,-45,-47,-48,-50,-52,45,-49,45,45,-29,45,-51,45,45,45,45,45,45,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,45,-46,45,45,45,45,45,45,-29,45,45,45,45,45,]),'DECREMENT':([5,48,],[31,31,]),'RPAREN':([18,19,20,21,30,31,47,48,56,57,58,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,96,97,98,99,101,102,103,104,106,114,115,116,129,131,133,],[-44,-45,-47,-48,-50,-52,83,-49,-29,-43,-51,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-64,-46,100,-64,105,107,117,-16,-17,-18,-13,119,-11,-12,121,-64,130,-61,138,-19,-14,]),'COLON':([18,19,20,21,30,31,48,52,56,57,58,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,116,119,123,135,136,],[-44,-45,-47,-48,-50,-52,-49,88,-29,-43,-51,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,95,-46,-61,132,134,141,142,]),'COMMA':([18,19,20,21,30,31,48,56,57,58,68,69,70,71,72,73,74,75,76,77,78,79,80,83,97,99,101,103,116,131,133,],[-44,-45,-47,-48,-50,-52,-49,-29,-43,-51,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-46,118,-18,-13,120,-61,-19,-14,]),'TO':([18,19,20,21,30,31,48,56,57,58,68,69,70,71,72,73,74,75,76,77,78,79,80,83,109,116,],[-44,-45,-47,-48,-50,-52,-49,-29,-43,-51,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-46,127,-61,]),'STRING':([24,51,],[59,86,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program_eval':([0,],[1,]),'program':([0,],[2,]),'statements':([0,14,55,88,110,132,134,137,141,142,],[3,54,91,108,91,139,140,143,146,147,]),'statement':([0,3,14,54,55,88,91,108,110,132,134,137,139,140,141,142,143,146,147,],[4,23,4,23,4,4,23,23,4,4,4,4,23,23,4,4,23,23,23,]),'expression':([0,3,8,12,14,15,16,17,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,51,54,55,82,86,88,89,90,91,92,94,95,108,110,114,118,125,127,132,134,137,139,140,141,142,143,146,147,],[6,6,47,52,6,55,56,57,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,87,6,6,99,106,6,109,110,6,113,115,116,6,6,99,131,136,137,6,6,6,6,6,6,6,6,6,6,]),'args':([82,114,],[96,129,]),'args_list':([82,114,],[97,97,]),'empty':([82,85,108,114,147,],[98,104,126,98,126,]),'params':([85,],[102,]),'params_list':([85,],[103,]),'maybe_end':([91,108,110,139,140,143,146,],[111,122,128,144,145,148,149,]),'elif_list':([108,147,],[124,150,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program_eval","S'",1,None,None,None),
  ('program_eval -> program','program_eval',1,'p_program_eval','app.py',119),
  ('program -> statements','program',1,'p_program','app.py',126),
  ('statements -> statements statement','statements',2,'p_statements','app.py',130),
  ('statements -> statement','statements',1,'p_statements','app.py',131),
  ('statement -> ID ASSIGN STRING','statement',3,'p_statement_declare_string','app.py',146),
  ('statement -> ID ASSIGN expression','statement',3,'p_statement_assign','app.py',150),
  ('statement -> ID ASSIGN CALL ID LPAREN args RPAREN','statement',7,'p_statement_assign_function_call','app.py',154),
  ('statement -> RETURN LPAREN expression RPAREN','statement',4,'p_statement_return','app.py',158),
  ('statement -> ID ASSIGN RETURN LPAREN expression RPAREN','statement',6,'p_statement_return','app.py',159),
  ('statement -> FUNC ID LPAREN params RPAREN COLON statements maybe_end','statement',8,'p_function_definition','app.py',166),
  ('params -> params_list','params',1,'p_params','app.py',170),
  ('params -> empty','params',1,'p_params','app.py',171),
  ('params_list -> ID','params_list',1,'p_params_list','app.py',175),
  ('params_list -> params_list COMMA ID','params_list',3,'p_params_list','app.py',176),
  ('statement -> CALL ID LPAREN args RPAREN','statement',5,'p_function_call','app.py',183),
  ('args -> args_list','args',1,'p_args','app.py',187),
  ('args -> empty','args',1,'p_args','app.py',188),
  ('args_list -> expression','args_list',1,'p_args_list','app.py',192),
  ('args_list -> args_list COMMA expression','args_list',3,'p_args_list','app.py',193),
  ('statement -> PRINT LPAREN STRING RPAREN','statement',4,'p_statement_print','app.py',200),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_statement_print','app.py',201),
  ('statement -> PRINT LPAREN STRING expression RPAREN','statement',5,'p_statement_print','app.py',202),
  ('statement -> ID PLUS_ASSIGN expression','statement',3,'p_statement_compound_assign','app.py',214),
  ('statement -> ID MINUS_ASSIGN expression','statement',3,'p_statement_compound_assign','app.py',215),
  ('statement -> ID TIMES_ASSIGN expression','statement',3,'p_statement_compound_assign','app.py',216),
  ('statement -> ID DIVIDE_ASSIGN expression','statement',3,'p_statement_compound_assign','app.py',217),
  ('statement -> ID MOD_ASSIGN expression','statement',3,'p_statement_compound_assign','app.py',218),
  ('statement -> expression','statement',1,'p_statement_expr','app.py',234),
  ('expression -> MINUS expression','expression',2,'p_expression_neg','app.py',239),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','app.py',244),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','app.py',245),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','app.py',246),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','app.py',247),
  ('expression -> expression EXPO expression','expression',3,'p_expression_binop','app.py',248),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','app.py',249),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression_comparison','app.py',264),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression_comparison','app.py',265),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_comparison','app.py',266),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_comparison','app.py',267),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_comparison','app.py',268),
  ('expression -> expression AND expression','expression',3,'p_expression_logic_AND','app.py',272),
  ('expression -> expression OR expression','expression',3,'p_expression_logic_OR','app.py',276),
  ('expression -> NOT expression','expression',2,'p_expression_logic_NOT','app.py',280),
  ('expression -> TRUE','expression',1,'p_expression_boolean','app.py',284),
  ('expression -> FALSE','expression',1,'p_expression_boolean','app.py',285),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','app.py',289),
  ('expression -> INTEGER','expression',1,'p_expression_number','app.py',293),
  ('expression -> FLOAT','expression',1,'p_expression_number','app.py',294),
  ('expression -> ID','expression',1,'p_expression_id','app.py',298),
  ('expression -> ID INCREMENT','expression',2,'p_expression_increment','app.py',302),
  ('expression -> INCREMENT ID','expression',2,'p_expression_increment','app.py',303),
  ('expression -> ID DECREMENT','expression',2,'p_expression_decrement','app.py',310),
  ('statement -> IF expression COLON statements maybe_end','statement',5,'p_statement_if','app.py',317),
  ('statement -> IF expression COLON statements ELSE COLON statements maybe_end','statement',8,'p_statement_if_else','app.py',321),
  ('statement -> IF expression COLON statements elif_list ELSE COLON statements maybe_end','statement',9,'p_statement_if_elif_else','app.py',325),
  ('elif_list -> ELIF expression COLON statements elif_list','elif_list',5,'p_elif_list','app.py',329),
  ('elif_list -> empty','elif_list',1,'p_elif_list','app.py',330),
  ('statement -> FOR ID ASSIGN expression TO expression statements maybe_end','statement',8,'p_statement_for','app.py',337),
  ('statement -> DO statements WHILE expression maybe_end','statement',5,'p_statement_do_while','app.py',341),
  ('statement -> WHILE expression statements maybe_end','statement',4,'p_statement_while','app.py',345),
  ('expression -> expression QUEST expression COLON expression','expression',5,'p_expression_ternary','app.py',349),
  ('maybe_end -> <empty>','maybe_end',0,'p_maybe_end','app.py',353),
  ('maybe_end -> END','maybe_end',1,'p_maybe_end','app.py',354),
  ('empty -> <empty>','empty',0,'p_empty','app.py',358),
]
